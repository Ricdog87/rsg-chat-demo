// app/layout.tsx
export const metadata: Metadata = {
  title: "Headhunting & Recruiting zum Festpreis – Deutschlandweit | Lacar Associate",
  description:
    "Personalvermittlung & Executive Search zum Festpreis – Deutschlandweit aus Wiesbaden. Engineering, IT, Finance & Kaufmännisch in Berlin, Hamburg, München, Frankfurt, Köln, NRW & ganz Deutschland.",
  alternates: {
    canonical: "https://lacar-associate.de",
  },
  openGraph: {
    title: "Headhunting & Recruiting zum Festpreis – Deutschlandweit | Lacar Associate",
    description:
      "Personalvermittlung & Executive Search zum Festpreis – Deutschlandweit aus Wiesbaden. Engineering, IT, Finance & Kaufmännisch in Berlin, Hamburg, München, Frankfurt, Köln, NRW & ganz Deutschland.",
    url: "https://lacar-associate.de",
    siteName: "Lacar Associate",
    images: [{ url: "https://lacar-associate.de/og-image.png" }],
    type: "website",
    locale: "de_DE",
  },
  twitter: {
    card: "summary_large_image",
    title: "Headhunting & Recruiting zum Festpreis – Deutschlandweit | Lacar Associate",
    description:
      "Personalvermittlung & Executive Search zum Festpreis – Deutschlandweit aus Wiesbaden. Engineering, IT, Finance & Kaufmännisch in Berlin, Hamburg, München, Frankfurt, Köln, NRW & ganz Deutschland.",
    images: ["https://lacar-associate.de/og-image.png"],
  },
}

// app/actions/contact-form.ts
export const contactFormAction = async (formData: FormData) => {
  const email = formData.get("email") as string;
  const message = formData.get("message") as string;

  const response = await fetch("https://lacar-associate.de/api/contact", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      email: email,
      message: message,
      to: "ricardo.serrano@lacar-associate.de", // Updated recipient address
    }),
  });

  if (!response.ok) {
    throw new Error("Failed to send email");
  }

  return { success: true };
};

// components/cookie-consent.tsx
import React, { useState, useEffect } from "react";

const CookieConsent: React.FC = () => {
  const [showConsent, setShowConsent] = useState(false);
  const [showDetails, setShowDetails] = useState(false);

  useEffect(() => {
    const savedConsentRaw = localStorage.getItem("cookie-consent");
    if (!savedConsentRaw) {
      const timer = setTimeout(() => setShowConsent(true), 800);
      return () => clearTimeout(timer);
    }

    try {
      const saved = JSON.parse(savedConsentRaw);
      const timestamp = saved?.timestamp ? new Date(saved.timestamp).getTime() : 0;
      const now = Date.now();
      const days180 = 180 * 24 * 60 * 60 * 1000;
      const isExpired = !timestamp || now - timestamp > days180;
      if (isExpired) {
        setShowConsent(true);
      }
    } catch {
      setShowConsent(true);
    }
  }, []);

  useEffect(() => {
    const openHandler = () => {
      setShowDetails(true);
      setShowConsent(true);
    };
    window.addEventListener("open-cookie-consent", openHandler);
    (window as any).showCookieSettings = () => {
      window.dispatchEvent(new CustomEvent("open-cookie-consent"));
    };
    return () => {
      window.removeEventListener("open-cookie-consent", openHandler);
      if ((window as any).showCookieSettings) {
        delete (window as any).showCookieSettings;
      }
    };
  }, []);

  return (
    <div>
      {showConsent && (
        <div>
          <h4 className="text-base sm:text-lg font-semibold mb-2 sm:mb-3 md:mb-4">
            Cookie-Einstellungen
          </h4>
          <p className="text-sm md:text-base mb-4">
            Wir verwenden Cookies, um unsere Website zu verbessern und personalisierte Inhalte anzuzeigen.
          </p>
          <button
            type="button"
            onClick={() => {
              localStorage.setItem("cookie-consent", JSON.stringify({ timestamp: new Date() }));
              setShowConsent(false);
            }}
            className="text-accent hover:bg-accent hover:text-white px-4 py-2 rounded"
          >
            Akzeptieren
          </button>
          {showDetails && (
            <button
              type="button"
              onClick={() => setShowDetails(false)}
              className="text-white/80 hover:text-accent transition-colors px-4 py-2 rounded ml-2"
            >
              Details schließen
            </button>
          )}
        </div>
      )}
    </div>
  );
};

// components/footer.tsx
import React from "react";

const Footer: React.FC = () => {
  return (
    <footer className="bg-primary py-8">
      <div className="container mx-auto px-4">
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-8">
          <div>
            <h4 className="text-base sm:text-lg font-semibold mb-2 sm:mb-3 md:mb-4">Über uns</h4>
            <p className="text-sm md:text-base mb-4">
              Lacar Associate ist ein führender Personalvermittlungsdienst in Deutschland.
            </p>
          </div>
          <div>
            <h4 className="text-base sm:text-lg font-semibold mb-2 sm:mb-3 md:mb-4">Dienstleistungen</h4>
            <ul className="space-y-1 sm:space-y-2">
              <li>Headhunting</li>
              <li>Executive Search</li>
              <li>Personalvermittlung</li>
            </ul>
          </div>
          <div>
            <h4 className="text-base sm:text-lg font-semibold mb-2 sm:mb-3 md:mb-4">Kontakt</h4>
            <ul className="space-y-1 sm:space-y-2">
              <li>Wiesbaden</li>
              <li>Telefon: +49 611 12345678</li>
              <li>E-Mail: info@lacar-associate.de</li>
            </ul>
          </div>
          <div>
            <h4 className="text-base sm:text-lg font-semibold mb-2 sm:mb-3 md:mb-4">Rechtliches</h4>
            <ul className="space-y-1 sm:space-y-2">
              <li>
                <button
                  type="button"
                  onClick={() => {
                    if (typeof window !== "undefined") {
                      window.dispatchEvent(new CustomEvent("open-cookie-consent"));
                    }
                  }}
                  className="text-white/80 hover:text-accent transition-colors text-sm md:text-base underline underline-offset-4"
                  aria-label="Cookie-Einstellungen öffnen"
                >
                  Cookie-Einstellungen
                </button>
              </li>
              <li>Impressum</li>
              <li>AGB</li>
              <li>Datenschutz</li>
            </ul>
          </div>
        </div>
      </div>
    </footer>
  );
};
